<new-game>
    <typed/>
    <input-form 
        formName={ 'name' } 
        placeholder={ 'あなたのなまえ' } 
        nextStage={ inputName }
        if={ this.store.getState().userData.isInputForm }
    />
    <role-buttons 
        buttons={ languages }
        if={ this.store.getState().userData.isRoleButtons }
    /> 
    <style>
        :host {
            width: 100vh;
        }
    </style>

    <script>
        import Typed from '../typed.riot'
        import InputForm from '../utility/input-form.riot'
        import RoleButtons from './role-buttons.riot'
        import userDataAction from '../../actions/userDataAction.js'
        import stringsAction from '../../actions/stringsAction.js'

        export default {
            components: {
                Typed,
                InputForm,
                RoleButtons
            },
            languages: [
                'Java',
                'Ruby',
                'Rust'
            ],
            onBeforeMount() {
                //typedの初期値
                const words = [
                    'ぼうけんの書をあらたに作成します。',
                    'あなたのなまえを入力してください。'
                ]
                this.store.dispatch(userDataAction.reset()) //ユーザー情報の初期化
                this.store.dispatch(stringsAction.changeStrings(words)) //typed.jsで出力する文字列の初期化
            },
            inputName(e) {
                e.preventDefault()

                //ユーザー名をstateに追加する
                const userName = e.target.name.value
                this.store.dispatch(userDataAction.addUserName(userName))

                //typed.jsで出力する文字列を更新する
                const nextWords = ['あなたの職業はプログラマーです。', 'あなたが興味のある言語をえらんでください。']
                this.store.dispatch(stringsAction.changeStrings(nextWords))

                //画面の更新
                e.target.name.value = ''
                this.update()
            }
        }
    </script>
</new-game>